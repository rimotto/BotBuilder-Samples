> This file contains the generic templates to use for properties of particular types.

> !# @Namespace = lib
> !# @Exports = missingCondition, missingPriority, helpCondition

> This is to provide consistent line endings in templates using Windows standard
# EOL
-\n

# welcome
- Welcome!

# propertyName(property)
- ${template(`${property}_Name`)}

# propertyValue(property, val)
- ${template(`${property}_Value`, val)}

# entityValue(property, val)
- ${template(`${property}Entity_Value`, val)}

# value(val)
- ${complexValue(val, null)}

> Display a value handling arrays and objects and leaf display template
> TODO: This is being blocked by emulator displaying {} 
> https://github.com/microsoft/BotFramework-Emulator/issues/2154
# complexValue(val, leaf)
- IF: ${isArray(val)}
- [${join(foreach(val, elt, complexValue(elt, leaf)), ', ')}]
- ELSEIF: ${isObject(val)}
- (${join(foreach(indicesAndValues(val), elt, `${elt.index}: ${complexValue(elt.value, leaf)}`), ', ')})
- ELSEIF: ${val}
- ${if(leaf, template(leaf, val), val)}
- ELSE:
- no value

# publicProperties
-${dialogClass.schema.$public}

# possibleValues(property)
- ${foreach(enumValues(property), enum, propertyValue(property, enum))}

# isArrayProperty(property)
- ${dialogClass.schema.properties[property].type == 'array'}

# enumValues(property)
- IF: ${isArrayProperty(property)}
    - ${dialogClass.schema.properties[property].items.enum}
- ELSE:
    - ${dialogClass.schema.properties[property].enum}

# possibleValuesList(property)
- [${join(possibleValues(property), ', ')}]

# confirmationText(property, val)
- IF: ${contains($expectedProperties, property)}
    - ${template(if(dialog[property], `${property}_ExpectedUpdateConfirmation`, `${property}_ExpectedSetConfirmation`), val)}
- ELSE:
    - ${template(if(dialog[property], `${property}_UnexpectedUpdateConfirmation`, `${property}_UnexpectedSetConfirmation`), val)}

# cancelPrompt
- Do you want to end the conversation? (yes/no)

# changePropertyPrompt
- Is there any property you want to change? (no or the property name)

# choosePropertyPrompt
- Which property do you want to change?

# notUnderstood
- Sorry, I do not understand ${join(foreach(turn.unrecognizedtext, chunk, `'${chunk}'`), ' or ')}

>> FUNCTIONS for dialogs
> The offset is to leave room for things like PropertyToChange
# missingPriority(property)
- ${if(indexOf($requiredProperties, property) < 0, -1, 100 + indexOf($requiredProperties, property))}

